apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      initContainers:
        - name: wait-for-postgres
          image: postgres:latest
          command: ["sh", "-c", "until pg_isready -U postgres -h postgres; do sleep 2; done"]
        
        - name: wait-for-cassandra
          image: cassandra:latest
          command: ["sh", "-c", "until cqlsh -e 'SELECT release_version FROM system.local;' cassandra; do sleep 2; done"]

      containers:
        - name: app
          image: sevabek/app:latest
          ports:
            - containerPort: 8080

          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres_secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres_secret
                  key: POSTGRES_USER
            - name: POSTGRES_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: postgres_secret
                  key: POSTGRES_DB_NAME

          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 2

          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 2

          resources:
            limits:
              memory: "1Gi"
              cpu: "500m"